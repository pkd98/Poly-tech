-- PL/SQL Advanced feature 1 (Dynamic SQL, Cursor)
SET SERVEROUTPUT ON;

-- 1. 동적 SQL 실습
--BEGIN
--	CREATE TABLE BY_DYNAMIC(X DATE); -- DDL계열
--END;
--/

DECLARE
	V_SQL VARCHAR2(2000);
BEGIN
	-- PL/SQL BLOCK내에서 DDL,DCL, 등의 계열은 동적으로만 가능 합니다.
	BEGIN
		V_SQL := 'DROP TABLE BY_DYNAMIC'; -- DDL, String 을 실행시점에 조작함으로 동적 SQL을 구현한다.
		EXECUTE IMMEDIATE V_SQL; -- 변수에 SQL 저장. 실제 동적 SQL 실행
	EXCEPTION
		WHEN OTHERS THEN
			DBMS_OUTPUT.PUT_LINE('DYNAMIC SQL DROP => '||SUBSTR(SQLERRM,1,50));
		END;
	BEGIN
		EXECUTE IMMEDIATE 'CREATE TABLE BY_DYNAMIC(X DATE)'; -- 직접 SQL 문장 사용
	EXCEPTION
		WHEN OTHERS THEN
			DBMS_OUTPUT.PUT_LINE('DYNAMIC SQL CREATE =>'||SUBSTR(SQLERRM,1,50));
		END;
END;
/

DESC BY_DYNAMIC;
SELECT * FROM BY_DYNAMIC;

DECLARE
	V_SQL VARCHAR2(2000);
	V_CONDITION_FLAG BOOLEAN := TRUE;
	R_EMP EMP%ROWTYPE;
BEGIN
	V_CONDITION_FLAG := FALSE;
	-- SELECT 문을 동적으로 생성
	BEGIN
		V_SQL := ' SELECT * FROM EMP WHERE EMPNO = :V_EMPNO'; -- host 변수 사용

		IF V_CONDITION_FLAG THEN -- 프로그램 실행시 조건(상황)에 따라 SELECT 변경
			V_SQL := V_SQL||' AND JOB = ''SALESMAN'' '; -- (조건절 추가)
		END IF;

		EXECUTE IMMEDIATE V_SQL INTO R_EMP USING 7499; -- 7499가 host 변수에 대입됨

		DBMS_OUTPUT.PUT_LINE('DYNAMIC SELECT EMPNO='||R_EMP.EMPNO||' ,ENAME='||R_EMP.ENAME);

	EXCEPTION
		WHEN OTHERS THEN
			DBMS_OUTPUT.PUT_LINE('DYNAMIC SQL SELECT => '||SUBSTR(SQLERRM,1,50));
		END;
		-- DDL , DML 문을 동적으로 작성
	BEGIN
		EXECUTE IMMEDIATE 'CREATE TABLE BONUS_LIST(EMPNO NUMBER(7), AMOUNT NUMBER)';
		V_SQL := 'INSERT INTO BONUS_LIST(EMPNO,AMOUNT) VALUES(:1,:2)';
		EXECUTE IMMEDIATE V_SQL USING 7499,7000; -- :1 ,:2는 어떤 의미? , 변수 사용 가능?
		COMMIT;
	EXCEPTION
		WHEN OTHERS THEN
			DBMS_OUTPUT.PUT_LINE('DYNAMIC SQL DDL AND DML => '||SUBSTR(SQLERRM,1,50));
		END;
END;
/
DESC BONUS_LIST
SELECT * FROM BONUS_LIST;

-- 2. 동적 CURSOR 실습
TRUNCATE TABLE BONUS;
SET SERVEROUTPUT ON
DECLARE
	CUR_VAR SYS_REFCURSOR; -- 커서변수 선언
	R_CUR_EMP EMP%ROWTYPE;
	V_SQL VARCHAR2(200);
BEGIN
	V_SQL := 'SELECT ENAME,JOB,SAL,COMM FROM EMP WHERE DEPTNO = :V_DEPTNO';
	OPEN CUR_VAR FOR V_SQL USING 10; -- 10 대신 변수 사용가능한가?
	LOOP
		FETCH CUR_VAR INTO
			R_CUR_EMP.ENAME, R_CUR_EMP.JOB,R_CUR_EMP.SAL,R_CUR_EMP.COMM;
		EXIT WHEN CUR_VAR%NOTFOUND;
		INSERT INTO BONUS(ENAME,JOB,SAL,COMM)
		VALUES(R_CUR_EMP.ENAME,R_CUR_EMP.JOB,R_CUR_EMP.SAL,R_CUR_EMP.COMM);
	END LOOP;
	DBMS_OUTPUT.PUT_LINE('TOTAL '||TO_CHAR(CUR_VAR%ROWCOUNT)||' rows processed');
	CLOSE CUR_VAR;
	COMMIT;
END;
/

SELECT * FROM BONUS
