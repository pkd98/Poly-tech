-- Variable & Print
VARIABLE H_SALARY NUMBER;
VARIABLE H_TAX NUMBER;
VARIABLE;

DECLARE
    C_TAX_RATE NUMBER(2, 3);
BEGIN
    C_TAX_RATE := 0.05;
    :H_SALARY := 1000;
    :H_TAX := ROUND((:H_SALARY * C_TAX_RATE), 2);
END;
/

PRINT H_SALARY;
PRINT H_TAX;

HELP PRINT
HELP VARIABLE
VARIABLE V_ENAME VARCHAR2(10);
VARIABLE V_ENAME;
VARIABLE;

-- Procedure
CREATE OR REPLACE PROCEDURE CHANGE_SALARY(A_EMPNO IN NUMBER, A_SALARY NUMBER DEFAULT 2000)
AS
BEGIN
	UPDATE EMP -- 트랜잭션 시작
	SET SAL = A_SALARY WHERE EMPNO = A_EMPNO;
	COMMIT; -- 트랜잭션 종료
END CHANGE_SALARY; 
/

DESC CHANGE_SALARY;
VARIABLE P_EMPNO NUMBER;
VARIABLE P_SALARY NUMBER;

BEGIN
	:P_EMPNO := 7369;
	:P_SALARY := 7369;
	CHANGE_SALARY(:P_EMPNO, :P_SALARY);
END;
/

SELECT EMPNO,SAL FROM EMP WHERE EMPNO = 7369;

EXECUTE CHANGE_SALARY(:P_EMPNO);
SELECT EMPNO,SAL FROM EMP WHERE EMPNO = 7369;


-- 예외처리의 필요성
SET SERVEROUTPUT ON;

CREATE OR REPLACE PROCEDURE CHANGE_SALARY(A_EMPNO IN NUMBER , A_SALARY NUMBER DEFAULT 2000 )
AS

BEGIN
	UPDATE EMP
	SET SAL = A_SALARY WHERE EMPNO = A_EMPNO;
	COMMIT;

EXCEPTION
	WHEN VALUE_ERROR THEN
		DBMS_OUTPUT.PUT_LINE('VALUE_ERROR => '||SQLERRM); -- 실제 운영시 사용 ??
		NULL;
	WHEN NO_DATA_FOUND THEN
		DBMS_OUTPUT.PUT_LINE('NO_DATA_FOUND => '||SQLERRM);
		ROLLBACK;
	WHEN OTHERS THEN
		DBMS_OUTPUT.PUT_LINE('OTHERS =>: '||SQLERRM);
		ROLLBACK;

END CHANGE_SALARY; 
/

-- prameter 이름과 값을 매핑하여 대입 가능!
-- Exception 처리결과가 안보이는 이유는? : 큰 값
EXECUTE CHANGE_SALARY(A_EMPNO => 7369 , A_SALARY => 1234);
SELECT EMPNO,SAL FROM EMP WHERE EMPNO = 7369;