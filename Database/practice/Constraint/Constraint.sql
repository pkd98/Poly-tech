-- Constraint (선언적 무결성 제약 사항)
-- 1. 테스트 대상 테이블 생성
CREATE TABLE CUSTOMER(
ID VARCHAR2(8) NOT NULL,                             -- NOT NULL 제약 사항 정의
PWD VARCHAR2(8) CONSTRAINT CUSTOMER_PWD_NN NOT NULL, -- 해당 제약 사항의 이름을 명시
NAME VARCHAR2(20), -- 이름
SEX CHAR(1), -- 성별 [M|F] M:Male F: Female
AGE NUMBER(3) -- 나이
);

DESC CUSTOMER

-- 2.
INSERT INTO CUSTOMER(ID,PWD,NAME,SEX, AGE) VALUES('xman','ok','kang', 'M',21);
INSERT INTO CUSTOMER(ID,PWD,NAME,SEX,AGE) VALUES('XMAN','no','kim', 'T',-20);

-- 3.
INSERT INTO CUSTOMER(ID,NAME,AGE) VALUES('zman','son',99);
INSERT INTO CUSTOMER(ID,PWD,NAME,AGE) VALUES('rman',NULL,'jjang',24);
INSERT INTO CUSTOMER(ID,PWD,NAME,AGE) VALUES('', 'pwd' ,'jjang',24);

-- 4.
UPDATE CUSTOMER SET PWD = NULL WHERE ID = 'XMAN'; -- ID가 XMAN인 ROW만 수정
SELECT * FROM CUSTOMER;

-- 5.
-- CUSTOMER2 테이블에 대한 제약 사항 확인
SELECT TABLE_NAME,CONSTRAINT_NAME,CONSTRAINT_TYPE,SEARCH_CONDITION
FROM USER_CONSTRAINTS
WHERE TABLE_NAME = 'CUSTOMER';

--
SELECT TABLE_NAME,CONSTRAINT_NAME,POSITION,COLUMN_NAME
FROM USER_CONS_COLUMNS
WHERE TABLE_NAME = 'CUSTOMER' ORDER BY CONSTRAINT_NAME,POSITION;

-- CHECK
-- 1.
ALTER TABLE CUSTOMER ADD CONSTRAINT CUSTOMER_SEX_CK CHECK (SEX IN ('M','F')); -- 조건

-- 2.
UPDATE CUSTOMER SET SEX='M' WHERE SEX='T';
COMMIT;
ALTER TABLE CUSTOMER ADD CONSTRAINT CUSTOMER_SEX_CK CHECK (SEX IN ('M','F'));

-- 3.
INSERT INTO CUSTOMER(ID,PWD,NAME,SEX, AGE) VALUES('xman','ok','kang', 'M',21);
INSERT INTO CUSTOMER(ID,PWD,NAME,SEX,AGE) VALUES('xman','ok', 'jjang','M',20);

-- 4.
INSERT INTO CUSTOMER(ID,PWD,NAME,AGE) VALUES('asura','ok', 'joo',99);

-- 5.
INSERT INTO CUSTOMER(ID,PWD,NAME,SEX,AGE) VALUES('harisu','ok', 'susu','T',33);

-- 6.
INSERT INTO CUSTOMER(ID,PWD,NAME,SEX,AGE) VALUES('shinsun','ok', '도사', 'M',999);

-- 7.
UPDATE CUSTOMER SET AGE = AGE + 1;

-- Unique Key
-- 1.
DROP TABLE CUSTOMER;

CREATE TABLE CUSTOMER(
		ID VARCHAR2(8) NOT NULL CONSTRAINT CUSTOMER_ID_UK UNIQUE,
		PWD VARCHAR2(8) NOT NULL,
		NAME VARCHAR2(20),
		SEX CHAR(1) DEFAULT 'M' -- 디폴트
		CONSTRAINT CUSTOMER_SEX_CK CHECK (SEX IN ('M','F')),
		MOBILE VARCHAR2(14) UNIQUE,
		AGE NUMBER(3) DEFAULT 18
);

-- 2.
INSERT INTO CUSTOMER(ID,PWD,NAME,MOBILE, AGE) VALUES('xman','ok','kang', '011-3333',21);

-- 3.
INSERT INTO CUSTOMER(ID,PWD,NAME, MOBILE,AGE) VALUES('XMAN','yes','kim','011-3334',33);

-- 4.
INSERT INTO CUSTOMER(ID,PWD,NAME, MOBILE,AGE) VALUES('xman','yes','lee', '011-3335',-21);

-- 5.
INSERT INTO CUSTOMER(ID,PWD,NAME, MOBILE,AGE) VALUES('yman','yes','lee', '011-3333',28);

-- 6.
INSERT INTO CUSTOMER(ID,PWD,NAME, MOBILE) VALUES('무명인','yes',NULL, NULL);
 
-- 7.
ALTER TABLE CUSTOMER ADD CONSTRAINT CUSTOMER_NAME_SEX_UK UNIQUE(NAME,SEX); -- 조합의 고유값
ALTER TABLE CUSTOMER MODIFY(NAME NOT NULL);
 
-- 8.
INSERT INTO CUSTOMER(ID,PWD,NAME, SEX) VALUES('rman','yes','syo', 'M'); -- 1
INSERT INTO CUSTOMER(ID,PWD,NAME, SEX ) VALUES('Rman','yes','syo', 'F'); -- 2
INSERT INTO CUSTOMER(ID,PWD,NAME, SEX) VALUES('RmaN','yes','syo', 'M'); -- 3
SELECT * FROM CUSTOMER;

-- 9.
SELECT INDEX_NAME,INDEX_TYPE,UNIQUENESS FROM USER_INDEXES
WHERE TABLE_NAME = 'CUSTOMER';

SELECT INDEX_NAME,COLUMN_POSITION,COLUMN_NAME FROM USER_IND_COLUMNS
WHERE TABLE_NAME = 'CUSTOMER' ORDER BY INDEX_NAME,COLUMN_POSITION;

-- PRIMARY KEY --
-- 1.
DROP TABLE CUSTOMER;

CREATE TABLE CUSTOMER(
    ID VARCHAR2(8) CONSTRAINT CUSTOMER_ID_PK PRIMARY KEY, -- 제약 사항 이름 정의 
    PWD VARCHAR2(8) NOT NULL,
    NAME VARCHAR2(20),
    SEX CHAR(1) DEFAULT 'M'
    CONSTRAINT CUSTOMER_SEX_CK CHECK (SEX IN ('M','F')),
    MOBILE VARCHAR2(14) CONSTRAINT CUSTOMER_MOBILE_UK UNIQUE,
    AGE NUMBER(3) DEFAULT 18
);

-- 2.
INSERT INTO CUSTOMER(ID,PWD,NAME,MOBILE) VALUES('zman','ok','한국', '011');
SELECT * FROM CUSTOMER;

-- 3.
INSERT INTO CUSTOMER(ID, PWD, NAME) VALUES('xman', 'ok', 'king');

-- 4.
INSERT INTO CUSTOMER(ID, PWD, NAME) VALUES('xman', 'power', 'zzang');

-- 5.
INSERT INTO CUSTOMER(ID,PWD,NAME) VALUES('Xman','korea','dbzzang');

-- 6.
INSERT INTO CUSTOMER(ID,PWD,NAME) VALUES(lower('xMan'),'ok','zzang');

-- 7.
INSERT INTO CUSTOMER(PWD, NAME) VALUES('ok', 'kim');

-- 8.
UPDATE CUSTOMER SET ID = NULL; -- 존재성(NOT NULL)
UPDATE CUSTOMER SET ID = 'XMAN'; -- 유일성(UNIQUENESS) / 고유성 위배

-- 9.
SELECT * FROM USER_CONSTRAINTS;
SELECT * FROM USER_CONS_COLUMNS;
SELECT * FROM USER_INDEXES;
SELECT * FROM USER_IND_COLUMNS;

-----
SELECT TABLE_NAME,CONSTRAINT_NAME,CONSTRAINT_TYPE,SEARCH_CONDITION FROM USER_CONSTRAINTS 
WHERE TABLE_NAME = 'CUSTOMER';


SELECT TABLE_NAME,CONSTRAINT_NAME,POSITION,COLUMN_NAME FROM USER_CONS_COLUMNS
WHERE TABLE_NAME = 'CUSTOMER' ORDER BY CONSTRAINT_NAME,POSITION;


SELECT INDEX_NAME,INDEX_TYPE,UNIQUENESS 
FROM USER_INDEXES
WHERE TABLE_NAME = 'CUSTOMER';


SELECT INDEX_NAME,COLUMN_POSITION,COLUMN_NAME 
FROM USER_IND_COLUMNS
WHERE TABLE_NAME = 'CUSTOMER' ORDER BY INDEX_NAME,COLUMN_POSITION;

-- Foreign Key
-- 1.
CREATE TABLE 부서(부서번호 VARCHAR2(2) CONSTRAINT 부서_부서번호_PK PRIMARY KEY,
									부서명 VARCHAR2(10) CONSTRAINT 부서_부서명_NN NOT NULL
);


CREATE TABLE 사원(사번 VARCHAR2(8) PRIMARY KEY,
                이름 VARCHAR2(10),
                부서번호 VARCHAR2(2), -- Table Level 제약사항
                CONSTRAINT 사원_부서_부서번호_FK FOREIGN KEY(부서번호)
											REFERENCES 부서(부서번호) [ON DELETE CASCADE | SET NULL]
);

-- 2.
desc 사원;

SELECT CONSTRAINT_NAME,CONSTRAINT_TYPE,
			 TABLE_NAME,SEARCH_CONDITION,R_CONSTRAINT_NAME,DELETE_RULE,STATUS
FROM USER_CONSTRAINTS
WHERE TABLE_NAME IN ('부서','사원');
-- CONSTRAINT_NAME, CONSTRAINT_TYPE, R_CONSTRAINT_NAME,DELETE_RULE 관찰

-- 3.
INSERT INTO 사원(사번,이름,부서번호) VALUES('XMAN', 'TUNER','10');

INSERT INTO 부서(부서번호,부서명) VALUES('10','관리'); -- 부서(Parent data) 정보 입력
INSERT INTO 부서(부서번호,부서명) VALUES('20','전산');
INSERT INTO 부서(부서번호,부서명) VALUES('50','영업');

-- 4.
INSERT INTO 사원(사번,이름,부서번호) VALUES('XMAN','TUNER',10);
INSERT INTO 사원(사번,이름,부서번호) VALUES('YMAN','DBA',20);

-- 5.
INSERT INTO 사원(사번,이름,부서번호) VALUES('ZMAN', 'DEVELOPER',30);

-- 6.
DELETE FROM 부서 WHERE 부서번호 = 50;

-- 7.
DELETE FROM 부서 WHERE 부서번호 = 10;

-- 8.
UPDATE 사원 SET 부서번호=20 WHERE 부서번호=10;
DELETE FROM 부서 WHERE 부서번호 = 10;
